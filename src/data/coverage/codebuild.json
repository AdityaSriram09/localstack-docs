{
  "service": "codebuild",
  "pro_support": true,
  "operations": [
    {
      "BatchDeleteBuilds": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetBuildBatches": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetBuilds": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetCommandExecutions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetFleets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetProjects": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetReportGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetReports": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetSandboxes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateFleet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateProject": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateReportGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateWebhook": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteBuildBatch": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteFleet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteProject": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteReport": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteReportGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteResourcePolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteSourceCredentials": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteWebhook": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeCodeCoverages": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTestCases": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetReportGroupTrend": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetResourcePolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ImportSourceCredentials": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "InvalidateProjectCache": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListBuildBatches": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListBuildBatchesForProject": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListBuilds": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListBuildsForProject": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListCommandExecutionsForSandbox": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListCuratedEnvironmentImages": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListFleets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListProjects": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ListReportGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListReports": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListReportsForReportGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListSandboxes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListSandboxesForProject": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListSharedProjects": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListSharedReportGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListSourceCredentials": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "PutResourcePolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RetryBuild": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RetryBuildBatch": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StartBuild": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "StartBuildBatch": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StartCommandExecution": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StartSandbox": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StartSandboxConnection": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StopBuild": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StopBuildBatch": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StopSandbox": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateFleet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateProject": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateProjectVisibility": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateReportGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateWebhook": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    }
  ],
  "details": {
    "BatchDeleteBuilds": {
      "ids": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_delete_build",
            "test": "test_delete_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_delete_build",
            "test": "test_delete_build",
            "response": "400",
            "error": "InvalidInputException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "BatchGetBuilds": {
      "ids": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/codepipeline_s3_codebuild_ecr/test_codepipeline.py::TestCodePipeline::test_ecr_pipeline_resources",
            "test": "test_ecr_pipeline_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy', '$..repositories..encryptionConfiguration.encryptionType', '$..repositories..repositoryUri']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_cdc_load_replication_task_data_queries[default]",
            "test": "test_cdc_load_replication_task_data_queries[default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..metadata.prev-transaction-id', '$..metadata.stream-position', '$..metadata.transaction-record-id', '$..metadata.prev-transaction-record-id', '$.kinesis-records[10].Data.data.height', '$.kinesis-records..Data.data.created_at']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_data_types",
            "test": "test_cdc_replication_task_data_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_full_load_replication_task[default]",
            "test": "test_full_load_replication_task[default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..Data.data.height', '$..Data.data.created_at', '$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_before_image[disabled]",
            "test": "test_cdc_before_image[disabled]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_load_replication_task_data_queries[default]",
            "test": "test_cdc_load_replication_task_data_queries[default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..metadata.prev-transaction-id', '$..metadata.stream-position', '$..metadata.transaction-record-id', '$..metadata.prev-transaction-record-id', '$.kinesis-records[10].Data.data.favorite_color', '$.describe-replication-tasks..RecoveryCheckpoint', '$.describe-replication-tasks..CdcStartPosition', '$..Data.control.table-def.collation-name']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_load_replication_task_data_queries[non_default]",
            "test": "test_cdc_load_replication_task_data_queries[non_default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..metadata.prev-transaction-id', '$..metadata.stream-position', '$..metadata.transaction-record-id', '$..metadata.prev-transaction-record-id', '$.kinesis-records[10].Data.data.favorite_color', '$.describe-replication-tasks..RecoveryCheckpoint', '$.describe-replication-tasks..CdcStartPosition', '$..Data.control.table-def.collation-name']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_load_replication_task_misc_queries",
            "test": "test_cdc_load_replication_task_misc_queries",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..Data.control.old-table-def.collation-name', '$..Data.control.table-def.collation-name']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_rename_change_column[mariadb]",
            "test": "test_cdc_rename_change_column[mariadb]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..metadata.prev-transaction-id', '$..metadata.prev-transaction-record-id', '$..Data.control.old-table-def.collation-name', '$..Data.control.table-def.collation-name']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_rename_change_column[mysql]",
            "test": "test_cdc_rename_change_column[mysql]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..metadata.prev-transaction-id', '$..metadata.prev-transaction-record-id', '$..Data.control.old-table-def.collation-name', '$..Data.control.table-def.collation-name']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_data_types",
            "test": "test_cdc_replication_task_data_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..national_char_type.collation-name', '$..national_varchar_type.collation-name', '$..json_type.collation-name', '$..Data.control.old-table-def.collation-name', '$..Data.control.table-def.collation-name']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_full_load_replication_task[mariadb-non_default]",
            "test": "test_full_load_replication_task[mariadb-non_default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..ReplicationTask.RecoveryCheckpoint', '$..ReplicationTasks..RecoveryCheckpoint', '$..Data.data.height', '$..Data.control.table-def.collation-name']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_full_load_replication_task[mysql-default]",
            "test": "test_full_load_replication_task[mysql-default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..ReplicationTask.RecoveryCheckpoint', '$..ReplicationTasks..RecoveryCheckpoint', '$..Data.data.height', '$..Data.control.table-def.collation-name']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_basic_response[default]",
            "test": "test_cdc_replication_task_basic_response[default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..ReplicationTaskSettings.TTSettings', '$..RecoveryCheckpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_basic_response[unformatted_json]",
            "test": "test_cdc_replication_task_basic_response[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..ReplicationTaskSettings.TTSettings', '$..RecoveryCheckpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_cdc_files[default]",
            "test": "test_cdc_replication_task_cdc_files[default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_cdc_files[non_default]",
            "test": "test_cdc_replication_task_cdc_files[non_default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_cdc_files[unformatted_json]",
            "test": "test_cdc_replication_task_cdc_files[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_cdc_multiple_files[default]",
            "test": "test_cdc_replication_task_cdc_multiple_files[default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_cdc_multiple_files[non_default]",
            "test": "test_cdc_replication_task_cdc_multiple_files[non_default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_cdc_multiple_files[unformatted_json]",
            "test": "test_cdc_replication_task_cdc_multiple_files[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[default]",
            "test": "test_cdc_replication_task_multiple_tables[default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[non_default]",
            "test": "test_cdc_replication_task_multiple_tables[non_default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_full_load_replication_task_multiple_tables[default]",
            "test": "test_full_load_replication_task_multiple_tables[default]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_no_csv_file[cdc]",
            "test": "test_no_csv_file[cdc]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..RecoveryTimeout', '$..ReplicationTaskSettings.TTSettings', '$..ReplicationTasks..RecoveryCheckpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_run_task_invalid_format_cdc_file[first row valid rest invalid]",
            "test": "test_run_task_invalid_format_cdc_file[first row valid rest invalid]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..RecoveryCheckpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_run_task_invalid_format_cdc_file[invalid number of columns]",
            "test": "test_run_task_invalid_format_cdc_file[invalid number of columns]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..RecoveryCheckpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_run_task_invalid_format_cdc_file[invalid operation]",
            "test": "test_run_task_invalid_format_cdc_file[invalid operation]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..RecoveryCheckpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_run_task_invalid_format_cdc_file[invalid schema]",
            "test": "test_run_task_invalid_format_cdc_file[invalid schema]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..RecoveryCheckpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_run_task_invalid_format_cdc_file[invalid table]",
            "test": "test_run_task_invalid_format_cdc_file[invalid table]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..RecoveryCheckpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_run_task_invalid_format_cdc_file[no data valid data]",
            "test": "test_run_task_invalid_format_cdc_file[no data valid data]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..RecoveryCheckpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_run_task_no_match_external_table_definition",
            "test": "test_run_task_no_match_external_table_definition",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_cdc_replication_data_queries",
            "test": "test_cdc_replication_data_queries",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..ReplicationStats.FullLoadFinishDate', '$..ReplicationStats.FullLoadStartDate', '$..Replication.ReplicationStats.StopDate']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_full_load_replication",
            "test": "test_full_load_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-secret-manager]",
            "test": "test_vpc_endpoints[without-secret-manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/serverlesspresso/test_serverlesspresso.py::TestServerlesspressoScenario::test_closed_store_aborts",
            "test": "test_closed_store_aborts",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/serverlesspresso/test_serverlesspresso.py::TestServerlesspressoScenario::test_concurrent_order_limit",
            "test": "test_concurrent_order_limit",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/serverlesspresso/test_serverlesspresso.py::TestServerlesspressoScenario::test_open_store",
            "test": "test_open_store",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/serverlesspresso/test_serverlesspresso.py::TestServerlesspressoScenario::test_order_completion_workflow",
            "test": "test_order_completion_workflow",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/serverlesspresso/test_serverlesspresso.py::TestServerlesspressoScenario::test_populate_data",
            "test": "test_populate_data",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/serverlesspresso/test_serverlesspresso.py::TestServerlesspressoScenario::test_websocket",
            "test": "test_websocket",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/account/test_account.py::TestAccount::test_contact_information",
            "test": "test_contact_information",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_apigateway_custom_domain.py::TestApigatewayCustomDomain::test_custom_domains_invocation",
            "test": "test_custom_domains_invocation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_apigateway_custom_domain.py::TestApigatewayCustomDomain::test_invoke_custom_domain",
            "test": "test_invoke_custom_domain",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_authorizers.py::TestRestApiAuthorizers::test_authorizer_cognito_scopes",
            "test": "test_authorizer_cognito_scopes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..claims.iss', '$..claims.iat', '$..claims.version', '$..claims.at_hash', '$..claims.jti', '$..claims[\"cognito:user_status\"]']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_authorizers.py::TestRestApiAuthorizers::test_authorizer_event_lambda_request_from_context",
            "test": "test_authorizer_event_lambda_request_from_context",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Via', '$..X-Amz-Cf-Id', '$..CloudFront-Forwarded-Proto', '$..CloudFront-Is-Desktop-Viewer', '$..CloudFront-Is-Mobile-Viewer', '$..CloudFront-Is-SmartTV-Viewer', '$..CloudFront-Is-Tablet-Viewer', '$..CloudFront-Viewer-ASN', '$..CloudFront-Viewer-Country', '$.create-authorizer-request.authType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_lambda_events_with_authorizer[2.0]",
            "test": "test_lambda_events_with_authorizer[2.0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_rest_apis.py::TestRestAPIs::test_iam_authorizer",
            "test": "test_iam_authorizer",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_rest_apis.py::TestRestAPIs::test_lambda_request_authorizer_different_paths[UrlType.HOST_BASED-True]",
            "test": "test_lambda_request_authorizer_different_paths[UrlType.HOST_BASED-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_rest_apis.py::TestRestAPIs::test_lambda_request_authorizer_different_paths[UrlType.PATH_BASED-True]",
            "test": "test_lambda_request_authorizer_different_paths[UrlType.PATH_BASED-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_rest_apis.py::TestRestAPIs::test_lambda_token_authorizer_event_payload",
            "test": "test_lambda_token_authorizer_event_payload",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..authType', '$..integrationLatency', '$..principalId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_websocket_apis.py::TestWebSockets::test_connect_disconnect_always_called",
            "test": "test_connect_disconnect_always_called",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_websocket_apis.py::TestWebSockets::test_websocket_api_with_http_integration[HTTP-False-True]",
            "test": "test_websocket_api_with_http_integration[HTTP-False-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_websocket_apis.py::TestWebSockets::test_websocket_matching_routes",
            "test": "test_websocket_matching_routes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_websocket_apis.py::TestWebSockets::test_websocket_non_proxy_response_integration",
            "test": "test_websocket_non_proxy_response_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_websocket_apis.py::TestWebSockets::test_websocket_with_http_proxy_integration[False]",
            "test": "test_websocket_with_http_proxy_integration[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers', '$..args', '$..files', '$..form', '$..json', '$..origin', '$..url', '$..method']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_querystring_parsing",
            "test": "test_querystring_parsing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_authorizers.py::TestHttpApiJwtAuthorizer::test_jwt_authorizer_lambda_target[1.0]",
            "test": "test_jwt_authorizer_lambda_target[1.0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..claims.version', '$..claims.at_hash', '$..claims.jti', '$..claims[\"cognito:user_status\"]']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_authorizers.py::TestHttpApiJwtAuthorizerAuth0::test_jwt_auth0_multiple_audience",
            "test": "test_jwt_auth0_multiple_audience",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_authorizers.py::TestHttpApiLambdaAuthorizer::test_request_authorizer_lambda_context[payload_format_version0]",
            "test": "test_request_authorizer_lambda_context[payload_format_version0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..authorizer.event.headers.Content-Length', '$..authorizer.lambda.event.headers.content-length']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_authorizers.py::TestIAMAuthorization::test_iam_authorization_missing_token",
            "test": "test_iam_authorization_missing_token",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_aws_proxy.py::TestHttpApiAwsProxyIntegration::test_aws_proxy_localstack_endpoint_types",
            "test": "test_aws_proxy_localstack_endpoint_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_aws_proxy.py::TestHttpApiAwsProxyIntegration::test_aws_proxy_response_payload_format_validation_v1",
            "test": "test_aws_proxy_response_payload_format_validation_v1",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.Server', '$..headers.Connection', '$..headers.Content-Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_aws_sqs.py::TestHttpApiAwsProxySubtypeSQS::test_aws_proxy_sqs_operations",
            "test": "test_aws_proxy_sqs_operations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.Server']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_http_cors.py::TestApigatewayV2Cors::test_cors_updated_on_non_updated_deployment",
            "test": "test_cors_updated_on_non_updated_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_http_crud.py::TestApigatewayV2HttpApiCrud::test_api_lifecycle",
            "test": "test_api_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_websockets/test_websockets_crud.py::TestWebsocketsRoute::test_route_request_parameters",
            "test": "test_route_request_parameters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/applicationautoscaling/test_application_autoscaling.py::TestAppAutoscaling::test_ecs_register_scalable_target",
            "test": "test_ecs_register_scalable_target",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ScalableTargetARN', '$..ScalableTargets..RoleARN', '$..ScalableTargets..SuspendedState']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/applicationautoscaling/test_application_autoscaling.py::TestAppAutoscalingTags::test_add_same_tag_twice",
            "test": "test_add_same_tag_twice",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_authorizers.py::TestAppSyncEventsIamAuth::test_connection",
            "test": "test_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.connection-message-wrong-signature..errors']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_authorizers.py::TestAppSyncLambdaAuthorizer::test_lambda_authorization",
            "test": "test_lambda_authorization",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_authorizers.py::TestAppsyncCognitoAuthorizer::test_cognito_authorization_auth_context_propagated_without_groups",
            "test": "test_cognito_authorization_auth_context_propagated_without_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..args', '$..identity.claims.event_id', '$..identity.claims.jti', '$..identity.claims.origin_jti', '$..identity.defaultAuthStrategy', '$..identity.sourceIp', '$..info.selectionSetGraphQL', '$..prev', '$..request', '$..source', '$..stash']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncHttpDataSource::test_http_data_source_return_object",
            "test": "test_http_data_source_return_object",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..code']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncLambdaDataSource::test_lambda_payload",
            "test": "test_lambda_payload",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..payload.data.getItem.event.field.identity', '$..payload.data.getItem.event.field.source', '$..payload.data.getItem.event.field.request', '$..payload.data.simple.field.identity', '$..payload.data.simple.field.source', '$..payload.data.simple.field.request', '$..info.selectionSetGraphQL', '$..info.variables']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source",
            "test": "test_rds_data_source",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_code_executor.py::TestAppsyncEventCodeExecutor::test_empty_payload",
            "test": "test_empty_payload",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_code_executor.py::TestAppsyncEventCodeExecutor::test_event_code_executor_context",
            "test": "test_event_code_executor_context",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.headers.accept-encoding', '$..request.headers.content-length', '$..request.headers.gogi-request-origin', '$..request.headers.x-amzn-remote-ip', '$..request.headers.x-amzn-requestid', '$..request.headers.x-amzn-trace-id', '$..request.headers.cloudfront-forwarded-proto', '$..request.headers.cloudfront-is-desktop-viewer', '$..request.headers.cloudfront-is-mobile-viewer', '$..request.headers.cloudfront-is-smarttv-viewer', '$..request.headers.cloudfront-is-tablet-viewer', '$..request.headers.cloudfront-viewer-asn', '$..request.headers.cloudfront-viewer-country', '$..request.headers.via', '$..request.headers.x-amz-cf-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_code_executor.py::TestAppsyncEventHttpDataSource::test_publish_execution",
            "test": "test_publish_execution",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.headers.accept-encoding', '$..request.headers.content-length', '$..request.headers.gogi-request-origin', '$..request.headers.x-amzn-remote-ip', '$..request.headers.x-amzn-requestid', '$..request.headers.x-amzn-trace-id', '$..result.body.headers.accept', '$..result.body.headers.accept-encoding', '$..result.body.headers.x-amzn-trace-id', '$..result.body.origin', '$..result.body.headers.date', '$..result.body.headers.user-agent', '$..result.body.headers.X-Amzn-Trace-Id', '$..result.headers.x-amzn-requestid', '$..result.headers.x-amzn-trace-id', '$..result.headers.Connection', '$..result.headers.Server', '$..result.headers.x-amzn-RequestId', '$..result.headers.X-Amzn-Trace-Id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_code_executor.py::TestAppsyncEventRdsDatasource::test_rds_simple",
            "test": "test_rds_simple",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_invocation.py::TestWebSocketEventConnection::test_websocket_connection_host_header",
            "test": "test_websocket_connection_host_header",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_invocation.py::TestWebsocketPublish::test_publish_through_ws",
            "test": "test_publish_through_ws",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_resolvers.py::TestAppsyncVtlResolvers::test_raise_custom_errors[message-only]",
            "test": "test_raise_custom_errors[message-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..errors..locations..sourceName', '$.result.data']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_websockets.py::TestWebsocketSubscription::test_subscription_lifecycle",
            "test": "test_subscription_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_websockets.py::TestWebsocketSubscription::test_websocket_subscriptions_relay_sample",
            "test": "test_websocket_subscriptions_relay_sample",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/autoscaling/test_autoscaling.py::TestAutoScaling::test_create_asg_errors",
            "test": "test_create_asg_errors",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/autoscaling/test_autoscaling.py::TestAutoScaling::test_metrics_collection",
            "test": "test_metrics_collection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/backup/test_backup.py::TestBackup::test_scheduled_backup_and_restore",
            "test": "test_scheduled_backup_and_restore",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_compute_environment_ecs_integration",
            "test": "test_compute_environment_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..clusters..settings', '$..clusters..statistics', '$..clusters..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_definitions.py::TestBatchJobDefinitionCRUD::test_register_job_definition",
            "test": "test_register_job_definition",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_state",
            "test": "test_update_job_queue_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags",
            "test": "test_batch_docker_flags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_cancel_job_invalid_job_id",
            "test": "test_cancel_job_invalid_job_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_describe_jobs",
            "test": "test_describe_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_events_job_state_change",
            "test": "test_events_job_state_change",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Messages..Body.detail.container.containerInstanceArn', '$..Messages..Body.detail.container.logStreamName', '$..Messages..Body.detail.container.networkInterfaces', '$..Messages..Body.detail.container.taskArn', '$..Messages..Body.detail.container.exitCode', '$..Messages..Body.detail.attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_job_failure",
            "test": "test_job_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..jobs..container.reason', '$..jobs..startedAt', '$..jobs..statusReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_list_jobs",
            "test": "test_list_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..statusReason', '$..jobSummaryList..jobDefinition']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow",
            "test": "test_submit_job_ecs_e2e_flow",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs_custom_log_group",
            "test": "test_submit_job_logs_custom_log_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency",
            "test": "test_submit_job_with_dependency",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..taskDefinitionArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_job_that_fails",
            "test": "test_submit_job_with_dependency_job_that_fails",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..startedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_non_existent_job",
            "test": "test_submit_job_with_dependency_non_existent_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_more_than_one_size",
            "test": "test_submit_job_with_more_than_one_size",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_parameters",
            "test": "test_submit_job_with_parameters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_tags",
            "test": "test_submit_job_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_terminate_job",
            "test": "test_terminate_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..attempts', '$..jobs..startedAt', '$..jobs..stoppedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_job_queue_tags",
            "test": "test_job_queue_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/bedrock/test_bedrock.py::TestBedrock::test_invocation_jobs",
            "test": "test_invocation_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Body', '$..ContentLength', '$..ContentType', '$..SSEKMSKeyId', '$..ServerSideEncryption', '$..status', '$..ChecksumCRC32', '$..ChecksumType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/bedrock/test_bedrock.py::TestBedrock::test_invoke_unknown_model",
            "test": "test_invoke_unknown_model",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_buildspec_override",
            "test": "test_buildspec_override",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..build.buildNumber']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_failure[build]",
            "test": "test_codebuild_failure[build]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases', '$..artifacts.md5sum', '$..artifacts.sha256sum']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_failure[pre-build]",
            "test": "test_codebuild_failure[pre-build]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases', '$..artifacts.md5sum', '$..artifacts.sha256sum']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_timeout",
            "test": "test_codebuild_timeout",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_delete_build",
            "test": "test_delete_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_ecr_build_image",
            "test": "test_ecr_build_image",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.artifacts.location', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_env_variables",
            "test": "test_env_variables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..project.artifacts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_environment_credentials_endpoint_region",
            "test": "test_environment_credentials_endpoint_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_getting_started_sample",
            "test": "test_getting_started_sample",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_multiple_builds",
            "test": "test_multiple_builds",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_terraform_github_module",
            "test": "test_terraform_github_module",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.artifacts', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_actions.py::TestAction::test_code_build_action",
            "test": "test_code_build_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_actions.py::TestAction::test_code_build_action",
            "test": "test_code_build_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_build_and_push_docker_image",
            "test": "test_build_and_push_docker_image",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_codebuild_failing_action",
            "test": "test_codebuild_failing_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.executionResult.externalExecutionSummary']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_resolved_variables",
            "test": "test_resolved_variables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_s3_deployment_provider",
            "test": "test_s3_deployment_provider",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_source_to_java_build",
            "test": "test_source_to_java_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "BatchGetProjects": {
      "names": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/codepipeline_s3_codebuild_ecr/test_codepipeline.py::TestCodePipeline::test_ecr_pipeline_resources",
            "test": "test_ecr_pipeline_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy', '$..repositories..encryptionConfiguration.encryptionType', '$..repositories..repositoryUri']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codebuild.py::test_codebuild_stack",
            "test": "test_codebuild_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..artifacts.namespaceType', '$..environment.environmentVariables..type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codebuild.py::test_codebuild_stack",
            "test": "test_codebuild_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..artifacts.namespaceType', '$..environment.environmentVariables..type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_project_crud_operations",
            "test": "test_project_crud_operations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.tags', '$..projects..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_actions.py::TestAction::test_code_build_action",
            "test": "test_code_build_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_build_and_push_docker_image",
            "test": "test_build_and_push_docker_image",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_codebuild_failing_action",
            "test": "test_codebuild_failing_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.executionResult.externalExecutionSummary']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_resolved_variables",
            "test": "test_resolved_variables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_s3_deployment_provider",
            "test": "test_s3_deployment_provider",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_source_to_java_build",
            "test": "test_source_to_java_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateProject": {
      "artifacts, cache, encryptionKey, environment, name, serviceRole, source, tags": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/codepipeline_s3_codebuild_ecr/test_codepipeline.py::TestCodePipeline::test_ecr_pipeline_resources",
            "test": "test_ecr_pipeline_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy', '$..repositories..encryptionConfiguration.encryptionType', '$..repositories..repositoryUri']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "artifacts, description, environment, name, serviceRole, source, tags, timeoutInMinutes": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codebuild.py::test_codebuild_stack",
            "test": "test_codebuild_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..artifacts.namespaceType', '$..environment.environmentVariables..type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "artifacts, environment, name, serviceRole, source": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_buildspec_override",
            "test": "test_buildspec_override",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..build.buildNumber']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_failure[build]",
            "test": "test_codebuild_failure[build]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases', '$..artifacts.md5sum', '$..artifacts.sha256sum']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_failure[pre-build]",
            "test": "test_codebuild_failure[pre-build]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases', '$..artifacts.md5sum', '$..artifacts.sha256sum']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_delete_build",
            "test": "test_delete_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_ecr_build_image",
            "test": "test_ecr_build_image",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.artifacts.location', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_env_variables",
            "test": "test_env_variables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..project.artifacts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_environment_credentials_endpoint_region",
            "test": "test_environment_credentials_endpoint_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_getting_started_sample",
            "test": "test_getting_started_sample",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_multiple_builds",
            "test": "test_multiple_builds",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_project_crud_operations",
            "test": "test_project_crud_operations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.tags', '$..projects..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_terraform_github_module",
            "test": "test_terraform_github_module",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.artifacts', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_build_and_push_docker_image",
            "test": "test_build_and_push_docker_image",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_codebuild_failing_action",
            "test": "test_codebuild_failing_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.executionResult.externalExecutionSummary']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_resolved_variables",
            "test": "test_resolved_variables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_s3_deployment_provider",
            "test": "test_s3_deployment_provider",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_source_to_java_build",
            "test": "test_source_to_java_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_project_crud_operations",
            "test": "test_project_crud_operations",
            "response": "400",
            "error": "ResourceAlreadyExistsException",
            "snapshot_skipped": "['$..project.tags', '$..projects..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "artifacts, environment, name, serviceRole, source, timeoutInMinutes": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_timeout",
            "test": "test_codebuild_timeout",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_actions.py::TestAction::test_code_build_action",
            "test": "test_code_build_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteProject": {
      "name": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/codepipeline_s3_codebuild_ecr/test_codepipeline.py::TestCodePipeline::test_ecr_pipeline_resources",
            "test": "test_ecr_pipeline_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy', '$..repositories..encryptionConfiguration.encryptionType', '$..repositories..repositoryUri']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codebuild.py::test_codebuild_stack",
            "test": "test_codebuild_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..artifacts.namespaceType', '$..environment.environmentVariables..type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_buildspec_override",
            "test": "test_buildspec_override",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..build.buildNumber']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_failure[build]",
            "test": "test_codebuild_failure[build]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases', '$..artifacts.md5sum', '$..artifacts.sha256sum']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_failure[pre-build]",
            "test": "test_codebuild_failure[pre-build]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases', '$..artifacts.md5sum', '$..artifacts.sha256sum']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_timeout",
            "test": "test_codebuild_timeout",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_delete_build",
            "test": "test_delete_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_ecr_build_image",
            "test": "test_ecr_build_image",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.artifacts.location', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_env_variables",
            "test": "test_env_variables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..project.artifacts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_environment_credentials_endpoint_region",
            "test": "test_environment_credentials_endpoint_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_getting_started_sample",
            "test": "test_getting_started_sample",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_multiple_builds",
            "test": "test_multiple_builds",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_project_crud_operations",
            "test": "test_project_crud_operations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.tags', '$..projects..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_terraform_github_module",
            "test": "test_terraform_github_module",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.artifacts', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_actions.py::TestAction::test_code_build_action",
            "test": "test_code_build_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_build_and_push_docker_image",
            "test": "test_build_and_push_docker_image",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_codebuild_failing_action",
            "test": "test_codebuild_failing_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.executionResult.externalExecutionSummary']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_resolved_variables",
            "test": "test_resolved_variables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_s3_deployment_provider",
            "test": "test_s3_deployment_provider",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_source_to_java_build",
            "test": "test_source_to_java_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteSourceCredentials": {
      "arn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_credentials_crud",
            "test": "test_credentials_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_terraform_github_module",
            "test": "test_terraform_github_module",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.artifacts', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_credentials_crud",
            "test": "test_credentials_crud",
            "response": "400",
            "error": "InvalidInputException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_credentials_crud",
            "test": "test_credentials_crud",
            "response": "400",
            "error": "ResourceNotFoundException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ImportSourceCredentials": {
      "authType, serverType, token": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_credentials_crud",
            "test": "test_credentials_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_terraform_github_module",
            "test": "test_terraform_github_module",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.artifacts', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_credentials_crud",
            "test": "test_credentials_crud",
            "response": "400",
            "error": "InvalidInputException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListProjects": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codebuild.py::test_codebuild_stack",
            "test": "test_codebuild_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..artifacts.namespaceType', '$..environment.environmentVariables..type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_project_crud_operations",
            "test": "test_project_crud_operations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.tags', '$..projects..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListSourceCredentials": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_credentials_crud",
            "test": "test_credentials_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "StartBuild": {
      "artifactsOverride, environmentVariablesOverride, projectName, sourceVersion": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/codepipeline_s3_codebuild_ecr/test_codepipeline.py::TestCodePipeline::test_ecr_pipeline_resources",
            "test": "test_ecr_pipeline_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy', '$..repositories..encryptionConfiguration.encryptionType', '$..repositories..repositoryUri']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_actions.py::TestAction::test_code_build_action",
            "test": "test_code_build_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_build_and_push_docker_image",
            "test": "test_build_and_push_docker_image",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_codebuild_failing_action",
            "test": "test_codebuild_failing_action",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.executionResult.externalExecutionSummary']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_resolved_variables",
            "test": "test_resolved_variables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_s3_deployment_provider",
            "test": "test_s3_deployment_provider",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_source_to_java_build",
            "test": "test_source_to_java_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "buildspecOverride, projectName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_buildspec_override",
            "test": "test_buildspec_override",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..build.buildNumber']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "environmentVariablesOverride, projectName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_env_variables",
            "test": "test_env_variables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..project.artifacts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "projectName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_failure[build]",
            "test": "test_codebuild_failure[build]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases', '$..artifacts.md5sum', '$..artifacts.sha256sum']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_failure[pre-build]",
            "test": "test_codebuild_failure[pre-build]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases', '$..artifacts.md5sum', '$..artifacts.sha256sum']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_codebuild_timeout",
            "test": "test_codebuild_timeout",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases', '$..logs', '$..phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_delete_build",
            "test": "test_delete_build",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_ecr_build_image",
            "test": "test_ecr_build_image",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.artifacts.location', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_environment_credentials_endpoint_region",
            "test": "test_environment_credentials_endpoint_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_getting_started_sample",
            "test": "test_getting_started_sample",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_multiple_builds",
            "test": "test_multiple_builds",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_terraform_github_module",
            "test": "test_terraform_github_module",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.artifacts', '$..build.logs', '$..build.phases']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "UpdateProject": {
      "environment, name, timeoutInMinutes": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_project_crud_operations",
            "test": "test_project_crud_operations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..project.tags', '$..projects..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "name": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_project_crud_operations",
            "test": "test_project_crud_operations",
            "response": "400",
            "error": "ResourceNotFoundException",
            "snapshot_skipped": "['$..project.tags', '$..projects..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    }
  }
}